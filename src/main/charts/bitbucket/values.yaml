# -- The initial number of pods that should be started at deployment of Bitbucket.
replicaCount: 1

image:
  repository: atlassian/bitbucket-server
  pullPolicy: IfNotPresent
  # -- The docker image tag to be used. Defaults to the Chart appVersion.
  tag: ""

# -- Specifies which serviceAccount to use for the pods. If not specified, the kubernetes default will be used.
serviceAccountName:

database:
  # -- The JDBC URL of the database to be used by Bitbucket, e.g. jdbc:postgresql://host:port/database
  url:
  # -- The Java class name of the JDBC driver to be used, e.g. org.postgresql.Driver
  driver:
  credentials:
    # -- The name of the Kubernetes Secret that contains the database login credentials.
    secretName: bitbucket-database-credentials
    # -- The key in the Secret used to store the database login username
    usernameSecretKey: username
    # -- The key in the Secret used to store the database login password
    passwordSecretKey: password

bitbucket:
  service:
    # -- The port on which the Jira Kubernetes service will listen
    port: 80
    # -- The type of Kubernetes service to use for Jira
    type: ClusterIP
  # -- The GID used by the Bitbucket docker image
  gid: "2003"
  ports:
    http: 7990
    ssh: 7999
    hazelcast: 5701

  license:
    # -- The name of the Kubernetes Secret which contains the Bitbucket license key
    secretName: bitbucket-license
    # -- The key in the Kubernetes Secret which contains the Bitbucket license key
    secretKey: license-key

  sysadminCredentials:
    # -- The name of the Kubernetes Secret which contains the Bitbucket sysadmin credentials
    secretName: bitbucket-sysadmin-credentials
    # -- The key in the Kubernetes Secret which contains the sysadmin username
    usernameSecretKey: username
    # -- The key in the Kubernetes Secret which contains the sysadmin password
    passwordSecretKey: password
    # -- The key in the Kubernetes Secret which contains the sysadmin display name
    displayNameSecretKey: displayName
    # -- The key in the Kubernetes Secret which contains the sysadmin email address
    emailAddressSecretKey: emailAddress

  proxy:
    # -- The fully-qualified domain name of the ingress
    fqdn:
    # -- The port number of the ingress
    port: 443
    # -- note that, if present, the value of x-forwarded-proto header will trump this setting
    scheme: https
    secure: true

  resources:
    jvm:
      # -- The maximum amount of heap memory that will be used by the Bitbucket JVM
      maxHeap: "1g"
      # -- The minimum amount of heap memory that will be used by the Bitbucket JVM
      minHeap: "1g"

    # -- Specifies the standard Kubernetes resource requests and/or limits for the Bitbucket container.
    # It is important that if the memory resources are specified here, they must allow for the size of the Bitbucket JVM.
    # That means the maximum heap size, the reserved code cache size, plus other JVM overheads, must be accommodated.
    # Allowing for (maxHeap+codeCache)*1.5 would be an example.
    container: {}
    #  limits:
    #    cpu: "4"
    #    memory: "2G"
    #  requests:
    #    cpu: "4"
    #    memory: "2G"

  # -- Specifies a list of additional arguments that can be passed to the Bitbucket JVM, e.g. system properties
  additionalJvmArgs:
  #    - -Dfoo=bar
  #    - -Dfruit=lemon

  # -- Specifies a list of additional Java libraries that should be added to the Bitbucket container.
  # Each item in the list should specify the name of the volume which contain the library, as well as the name of the
  # library file within that volume's root directory. Optionally, a subDirectory field can be included to specify which
  # directory in the volume contains the library file.
  additionalLibraries: []
  #  - volumeName:
  #    subDirectory:
  #    fileName:

  # -- Specifies a list of additional Bitbucket plugins that should be added to the Bitbucket container.
  # These are specified in the same manner as the additionalLibraries field, but the files will be loaded
  # as bundled plugins rather than as libraries.
  additionalBundledPlugins: []
  #  - volumeName:
  #    subDirectory:
  #    fileName:

  # -- Defines any additional volumes mounts for the Bitbucket container.
  # These can refer to existing volumes, or new volumes can be defined in volumes.additional.
  additionalVolumeMounts: []

  # -- Defines any additional environment variables to be passed to the Bitbucket container.
  # See https://hub.docker.com/r/atlassian/bitbucket-server for supported variables.
  additionalEnvironmentVariables: []

# -- Specify custom annotations to be added to all Bitbucket pods
podAnnotations: {}
#  "name": "value"

volumes:
  localHome:
    # -- Specifies the name of the storage class that should be used for the Bitbucket local-home volume
    storageClassName:
    # -- Specifies the standard Kubernetes resource requests and/or limits for the Bitbucket local-home volume.
    resources:
      requests:
        storage: 1Gi
    mountPath: "/var/atlassian/application-data/bitbucket"
  sharedHome:
    # -- Specifies the path in the Bitbucket container to which the shared-home volume will be mounted.
    mountPath: "/var/atlassian/application-data/shared-home"
    # -- Specifies the sub-directory of the shared-home volume which will be mounted in to the Bitbucket container.
    subPath:
    # -- The name of the PersistentVolumeClaim which will be used for the shared-home volume
    volumeClaimName: bitbucket-shared-home
    nfsPermissionFixer:
      # -- If enabled, this will alter the shared-home volume's root directory so that Bitbucket can write to it.
      # This is a workaround for a Kubernetes bug affecting NFS volumes: https://github.com/kubernetes/examples/issues/260
      enabled: true
      # -- The path in the initContainer where the shared-home volume will be mounted
      mountPath: /shared-home
      # -- By default, the fixer will change the group ownership of the volume's root directory to match the Bitbucket
      # container's GID (2003), and then ensures the directory is group-writeable. If this is not the desired behaviour,
      # command used can be specified here.
      command:
  # -- Defines additional volumes that should be applied to all Bitbucket pods.
  # Note that this will not create any corresponding volume mounts;
  # those needs to be defined in bitbucket.additionalVolumeMounts
  additional: []

# -- Standard Kubernetes node-selectors that will be applied to all Bitbucket pods
nodeSelector: {}

# -- Standard Kubernetes tolerations that will be applied to all Bitbucket pods
tolerations: []

# -- Standard Kubernetes affinities that will be applied to all Bitbucket pods
affinity: {}

# -- Additional container definitions that will be added to all Bitbucket pods
additionalContainers: []

# -- Additional initContainer definitions that will be added to all Bitbucket pods
additionalInitContainers: []
